clust <- d %>% ungroup %>% dplyr::select(x, y)
setwd("/Users/dphnrome/Documents/Git/Predict_Crime/")
library(lubridate)
library(tidyr)
library(dplyr)
#### Boston data ####
# Import data from Socrata
# Using their api
# dBRaw <- read.csv(url(
#   "http://data.cityofboston.gov/resource/7cdf-6fgx.csv?$limit=
#   20000&incident_type_description=RESIDENTIAL%20BURGLARY"))
#
# # Write the dataset so I don't have to keep importing from Socrata
# dB <- dBRaw
# write.csv(dBRaw, file = "./data/bos.csv")
d <- read.csv("./data/bos.csv")
d$Loc <- gsub("\\(", "", d$Location)
d$Loc <- gsub("\\)", "", d$Loc)
d <- d %>%
tbl_df()  %>% # Convert to tbl class - easier to examine than dfs
mutate(dateTime = mdy_hms(FROMDATE, tz='EST')) %>%
separate(Loc, c("x", "y"), ",")
clust <- d %>% ungroup %>% dplyr::select(x, y)
View(clust)
clust <- d %>% ungroup %>% dplyr::select(x, y) %>% kmeans(10)
clust
augment(clust, dat)
library(broom)
augment(clust, dat)
augment(clust, d)
dat <- augment(cluster, d)
dat <- augment(clust, d)
View(dat)
setwd("/Users/dphnrome/Documents/Git/Predict_Crime/")
library(lubridate)
library(tidyr)
library(dplyr)
library(broom) # augments d with model variables
#### Boston data ####
# Import data from Socrata
# Using their api
# dBRaw <- read.csv(url(
#   "http://data.cityofboston.gov/resource/7cdf-6fgx.csv?$limit=
#   20000&incident_type_description=RESIDENTIAL%20BURGLARY"))
#
# # Write the dataset so I don't have to keep importing from Socrata
# dB <- dBRaw
# write.csv(dBRaw, file = "./data/bos.csv")
d <- read.csv("./data/bos.csv")
# Prepare to create x, y
d$Loc <- gsub("\\(", "", d$Location)
d$Loc <- gsub("\\)", "", d$Loc)
d <- d %>%
tbl_df()  %>% # Convert to tbl class - easier to examine than dfs
mutate(dateTime = mdy_hms(FROMDATE, tz='EST')) %>%
separate(Loc, c("x", "y"), ",")
# 20 means
clust <- d %>%
ungroup %>% dplyr::select(x, y) %>% kmeans(20)
# Add cluster variable back to d
d <- augment(clust, dat)
View(d)
d <- read.csv("./data/bos.csv")
# Prepare to create x, y
d$Loc <- gsub("\\(", "", d$Location)
d$Loc <- gsub("\\)", "", d$Loc)
d <- d %>%
tbl_df()  %>% # Convert to tbl class - easier to examine than dfs
mutate(dateTime = mdy_hms(FROMDATE, tz='EST')) %>%
separate(Loc, c("x", "y"), ",")
# 20 means
clust <- d %>%
ungroup %>% dplyr::select(x, y) %>% kmeans(20)
d
View(d)
# Add cluster variable back to d
d <- augment(clust, dat)
# Add cluster variable back to d
d <- augment(clust, d)
View(d)
three <- d  %>% select(.cluster == 3)
three <- d  %>% select(.cluster = 3)
View(three)
three <- d  %>% filter(.cluster = 3)
View(d)
three <- d  %>% filter(x > 37)
three <- d  %>% filter(x > 42.43)
three <- d  %>% filter(x > 42.31)
three <- d  %>% filter(.cluster > 2)
three <- d  %>% mutate(clusterFuck = as.numeric(.cluster))
threeFinal <- three  %>%  filter(clusterFuck = 3)
threeFinal <- three  %>%  filter(clusterFuck == 3)
threeFinal
d
hist(clust$centers)
hist(threeFinal$x)
hist(as.numeric(threeFinal$x))
hist(as.numeric(threeFinal$y))
hist(as.numeric(threeFinal$x))
View(threeFinal)
(c_time[1:(length(c_time)-1)] , c_time[2:length(c_time)])
difftime(threeFinal$dateTime[1:(length((threeFinal$dateTime)-1)] , (threeFinal$dateTime[2:length((threeFinal$dateTime)])
difftime(threeFinal$dateTime[1:(length((threeFinal$dateTime)-1)] , (threeFinal$dateTime[2:length((threeFinal$dateTime)]))))
diff <- difftime(threeFinal$dateTime[1:(length((threeFinal$dateTime)-1)] , (threeFinal$dateTime[2:length((threeFinal$dateTime)])
diff <- difftime(threeFinal$dateTime[1:(length(threeFinal$dateTime)-1)] , (threeFinal$dateTime[2:length(threeFinal$dateTime)])
)
diff
hist(diff)
hist(as.numeric(diff))
diff <- difftime(threeFinal$dateTime[1:(length(threeFinal$dateTime)-1)] , (threeFinal$dateTime[2:length(threeFinal$dateTime)]))
diff
hours <- ((as.numeric(diff))/60)/60
hours
hours <- ((as.numeric(diff))/60)
hours
hours <- hours/60
hours
hours <- hours(diff)
hours
diff
d$dateTime[3]
d$dateTime[3] - d$dateTime[5]
for(i in 2:nrow(d)) {
if(d$.cluster[i] == d$.cluster[i-1])
d$dayssincelast[i] <- d$dateTime[i] - d$dateTime[i-1]
}
View(d)
for(i in 2:nrow(d)) {d$dayssincelast[i] <- d$dateTime[i] - d$dateTime[i-1]
}
View(d)
d$dayssincelast
summary(d$dayssincelast)
for(i in 2:nrow(d)) {
d$hourSinceLast[i] <- hour(d$dateTime[i]) - hour(d$dateTime[i-1])
}
d$hour <- hour(d$dateTime)
View(d)
d$hour <- hour(d$dateTime)
for(i in 2:nrow(d)) {
d$hourSinceLast[i] <- hour(d$dateTime)[i] - hour(d$dateTime)[i-1]
}
d$hour <- hour(d$dateTime)
for(i in 2:nrow(d)) {
d$timeSinceLast[i] <- d$dateTime[i] - d$dateTime[i-1]
}
View(d)
for(i in 2:nrow(d)) {
d$timeSinceLast[i] <- d$dateTime[i] - d$dateTime[i-1]
}
d <- read.csv("./data/bos.csv")
# Prepare to create x, y
d$Loc <- gsub("\\(", "", d$Location)
d$Loc <- gsub("\\)", "", d$Loc)
d <- d %>%
tbl_df()  %>% # Convert to tbl class - easier to examine than dfs
mutate(dateTime = mdy_hms(FROMDATE, tz='EST')) %>%
separate(Loc, c("x", "y"), ",")
# 20 means
clust <- d %>%
ungroup %>% dplyr::select(x, y) %>% kmeans(20)
# Add cluster variable back to d
d <- augment(clust, d)
for(i in 2:nrow(d)) {
d$timeSinceLast[i] <- d$dateTime[i] - d$dateTime[i-1]
}
for(i in 2:nrow(d)) {d$dayssincelast[i] <- d$dateTime[i] - d$dateTime[i-1]
for(i in 2:nrow(d)) {d$dayssincelast[i] <- d$dateTime[i] - d$dateTime[i-1]}
for(i in 2:nrow(d)) {d$dayssincelast[i] <- d$dateTime[i] - d$dateTime[i-1]
}
for(i in 2:nrow(d)){
d$lastCluster[i] <- d$.cluster[i-1]
}
d$lastCluster <- d$.cluster[1:(nrow(d)-1)]
d$lastCluster <- d$.cluster[1:(nrow(d)-2)]
d$lastCluster <- d$.cluster[1:(nrow(d))]
setwd("/Users/dphnrome/Documents/Git/Predict_Crime/")
library(lubridate)
library(tidyr)
library(dplyr)
library(broom) # augments d with model variables
#### Boston data ####
# Import data from Socrata
# Using their api
# dBRaw <- read.csv(url(
#   "http://data.cityofboston.gov/resource/7cdf-6fgx.csv?$limit=
#   20000&incident_type_description=RESIDENTIAL%20BURGLARY"))
#
# # Write the dataset so I don't have to keep importing from Socrata
# dB <- dBRaw
# write.csv(dBRaw, file = "./data/bos.csv")
d <- read.csv("./data/bos.csv")
# Prepare to create x, y
d$Loc <- gsub("\\(", "", d$Location)
d$Loc <- gsub("\\)", "", d$Loc)
d <- d %>%
tbl_df()  %>% # Convert to tbl class - easier to examine than dfs
mutate(dateTime = mdy_hms(FROMDATE, tz='EST')) %>%
separate(Loc, c("x", "y"), ",")
# 20 means
clust <- d %>%
ungroup %>% dplyr::select(x, y) %>% kmeans(20)
# Add cluster variable back to d
d <- augment(clust, d)
for(i in 2:nrow(d)){
d$lastCluster[i] <- d$.cluster[i-1]
}
nrow(d)
for(i in 2:nrow(d)){
d$lastCluster[i] <- d$.cluster[i-1]
}
for(i in 2:nrow(d)) {
d$lastCluster[i] <- d$.cluster[i-1]
}
i
for(i in 2:7431) {
d$lastCluster[i] <- d$.cluster[i-1]
}
i
for(i in 2:7431) {
d$lastCluster[i] <- d$.cluster[i-1]
}
d$lastCluster <- NULL
for(i in 2:7431) {
d$lastCluster[i] <- d$.cluster[i-1]
}
View(d)
d$lastCluster <- NULL
for(i in 2:7431) {
d$lastCluster[i] = d$.cluster[i-1]
}
for (i in d$.cluster){print(i)}
d$lastCluster <- d$.cluster[2:(nrow(d))]
for(i in 2:7431) {
d$lastCluster <- d$.cluster[2:(nrow(d))]
}
d <- read.csv("./data/bos.csv")
# Prepare to create x, y
d$Loc <- gsub("\\(", "", d$Location)
d$Loc <- gsub("\\)", "", d$Loc)
d <- d %>%
tbl_df()  %>% # Convert to tbl class - easier to examine than dfs
mutate(dateTime = mdy_hms(FROMDATE, tz='EST')) %>%
separate(Loc, c("x", "y"), ",")
# 20 means
clust <- d %>%
ungroup %>% dplyr::select(x, y) %>% kmeans(20)
# Add cluster variable back to d
d <- augment(clust, d)
d$test <- lag(d$.cluster)
View(d)
d$test <- lag(d$dateTime)
View(d)
for(i in 1:10){
d$nam <- paste("A", i, sep = "")
assign(nam, rnorm(3)+d)
}
for(i in 1:10){
d$nam <- paste("A", i, sep = "")
assign(d$nam, rnorm(3)+d)
}
for(i in 1:10){
nam <- paste("A", i, sep = "")
assign(nam, rnorm(3)+d)
}
d= 5
for(i in 1:10)
{
nam <- paste("A", i, sep = "")
assign(nam, rnorm(3)+d)
}
for(i in 1:10)
{
assign(paste("orca",i,sep=""), list_name[[i]])
}
setwd("/Users/dphnrome/Documents/Git/Predict_Crime/")
library(lubridate)
library(tidyr)
library(dplyr)
library(broom) # augments d with model variables
#### Boston data ####
# Import data from Socrata
# Using their api
# dBRaw <- read.csv(url(
#   "http://data.cityofboston.gov/resource/7cdf-6fgx.csv?$limit=
#   20000&incident_type_description=RESIDENTIAL%20BURGLARY"))
#
# # Write the dataset so I don't have to keep importing from Socrata
# dB <- dBRaw
# write.csv(dBRaw, file = "./data/bos.csv")
d <- read.csv("./data/bos.csv")
# Prepare to create x, y
d$Loc <- gsub("\\(", "", d$Location)
d$Loc <- gsub("\\)", "", d$Loc)
d <- d %>%
tbl_df()  %>% # Convert to tbl class - easier to examine than dfs
mutate(dateTime = mdy_hms(FROMDATE, tz='EST')) %>%
separate(Loc, c("x", "y"), ",")
# 20 means
clust <- d %>%
ungroup %>% dplyr::select(x, y) %>% kmeans(20)
# Add cluster variable back to d
d <- augment(clust, d)
for(i in 1:10)
{
assign(paste("orca",i,sep=""), d$test[[i]])
}
View(d)
setwd("/Users/dphnrome/Documents/Git/Predict_Crime/")
library(lubridate)
library(tidyr)
library(dplyr)
library(broom) # augments d with model variables
#### Boston data ####
# Import data from Socrata
# Using their api
# dBRaw <- read.csv(url(
#   "http://data.cityofboston.gov/resource/7cdf-6fgx.csv?$limit=
#   20000&incident_type_description=RESIDENTIAL%20BURGLARY"))
#
# # Write the dataset so I don't have to keep importing from Socrata
# dB <- dBRaw
# write.csv(dBRaw, file = "./data/bos.csv")
d <- read.csv("./data/bos.csv")
# Prepare to create x, y
d$Loc <- gsub("\\(", "", d$Location)
d$Loc <- gsub("\\)", "", d$Loc)
d <- d %>%
tbl_df()  %>% # Convert to tbl class - easier to examine than dfs
mutate(dateTime = mdy_hms(FROMDATE, tz='EST')) %>%
separate(Loc, c("x", "y"), ",")
# 20 means
clust <- d %>%
ungroup %>% dplyr::select(x, y) %>% kmeans(20)
# Add cluster variable back to d
d <- augment(clust, d)
for(i in 2:5){
i <- lag[i-1]
}
for(i in 2:5){
i <- lag([i-1])
}
for(i in 2:5){
i <- lag(i-1)
}
1 <- lag(d$.cluster)
one <- lag(d$.cluster)
one
1 <- lag(d$.cluster)
for(i in 2:5){
i <- lag(i-1)
}
vals <- rnorm(3)
n    <- length(vals)
lhs  <- paste("a",    1:n,     sep="")
rhs  <- paste("vals[",1:n,"]", sep="")
eq   <- paste(paste(lhs, rhs, sep="<-"), collapse=";")
eval(parse(text=eq))
vals
n
lhs
rhs
vals <- lag(d$.cluster)
n    <- length(vals)
lhs  <- paste("a",    1:n,     sep="")
rhs  <- paste("vals[",1:n,"]", sep="")
eq   <- paste(paste(lhs, rhs, sep="<-"), collapse=";")
eval(parse(text=eq))
lhs
rhs
eq
eval(parse(text=eq))
df.new <- cbind(df, ObJeCt[1:10])
names(df.new) <- c(names(df), paste("St", 1:10, sep = ""))
setwd("/Users/dphnrome/Documents/Git/Predict_Crime/")
library(lubridate)
library(tidyr)
library(dplyr)
library(broom) # augments d with model variables
#### Boston data ####
# Import data from Socrata
# Using their api
# dBRaw <- read.csv(url(
#   "http://data.cityofboston.gov/resource/7cdf-6fgx.csv?$limit=
#   20000&incident_type_description=RESIDENTIAL%20BURGLARY"))
#
# # Write the dataset so I don't have to keep importing from Socrata
# dB <- dBRaw
# write.csv(dBRaw, file = "./data/bos.csv")
d <- read.csv("./data/bos.csv")
# Prepare to create x, y
d$Loc <- gsub("\\(", "", d$Location)
d$Loc <- gsub("\\)", "", d$Loc)
d <- d %>%
tbl_df()  %>% # Convert to tbl class - easier to examine than dfs
mutate(dateTime = mdy_hms(FROMDATE, tz='EST')) %>%
separate(Loc, c("x", "y"), ",")
# 20 means
clust <- d %>%
ungroup %>% dplyr::select(x, y) %>% kmeans(20)
# Add cluster variable back to d
d <- augment(clust, d)
vals <- lag(d$.cluster)
View(d)
d
setwd("/Users/dphnrome/Documents/Git/Predict_Crime/")
library(lubridate)
library(tidyr)
library(dplyr)
library(broom) # augments d with model variables
#### Boston data ####
# Import data from Socrata
# Using their api
# dBRaw <- read.csv(url(
#   "http://data.cityofboston.gov/resource/7cdf-6fgx.csv?$limit=
#   20000&incident_type_description=RESIDENTIAL%20BURGLARY"))
#
# # Write the dataset so I don't have to keep importing from Socrata
# dB <- dBRaw
# write.csv(dBRaw, file = "./data/bos.csv")
d <- read.csv("./data/bos.csv")
# Prepare to create x, y
d$Loc <- gsub("\\(", "", d$Location)
d$Loc <- gsub("\\)", "", d$Loc)
d <- d %>%
tbl_df()  %>% # Convert to tbl class - easier to examine than dfs
mutate(dateTime = mdy_hms(FROMDATE, tz='EST')) %>%
separate(Loc, c("x", "y"), ",")
d
# 20 means
clust <- d %>%
ungroup %>% dplyr::select(x, y) %>% kmeans(20)
# Add cluster variable back to d
d <- augment(clust, d)
d
View(d)
d$REPTDISTRICT
d$REPORTINGAREA
summary(d$REPORTINGAREA)
summary(as.factor(d$REPORTINGAREA))
as.factor(d$REPORTINGAREA)
d$dateTime
hist(d$dateTime)
hist("years", d$dateTime)
hist(d$dateTime, "years")
hist(d$dateTime, "months")
hist(d$dateTime, "hours")
hist(d$dateTime, "weeks")
summary(d$.cluster)
setwd("/Users/dphnrome/Documents/Git/Predict_Crime/")
library(lubridate)
library(tidyr)
library(dplyr)
library(broom) # augments d with model variables
#### Boston data ####
# Import data from Socrata
# Using their api
# dBRaw <- read.csv(url(
#   "http://data.cityofboston.gov/resource/7cdf-6fgx.csv?$limit=
#   20000&incident_type_description=RESIDENTIAL%20BURGLARY"))
#
# # Write the dataset so I don't have to keep importing from Socrata
# dB <- dBRaw
# write.csv(dBRaw, file = "./data/bos.csv")
d <- read.csv("./data/bos.csv")
# Prepare to create x, y
d$Loc <- gsub("\\(", "", d$Location)
d$Loc <- gsub("\\)", "", d$Loc)
d <- d %>%
tbl_df()  %>% # Convert to tbl class - easier to examine than dfs
mutate(dateTime = mdy_hms(FROMDATE, tz='EST')) %>%
separate(Loc, c("x", "y"), ",")
# 20 means
clust <- d %>%
ungroup %>% dplyr::select(x, y) %>% kmeans(40)
# Add cluster variable back to d
d <- augment(clust, d)
vals <- lag(d$.cluster)
clust
setwd("/Users/dphnrome/Documents/Git/Predict_Crime/")
library(lubridate)
library(tidyr)
library(dplyr)
library(broom) # augments d with model variables
#### Boston data ####
# Import data from Socrata
# Using their api
# dBRaw <- read.csv(url(
#   "http://data.cityofboston.gov/resource/7cdf-6fgx.csv?$limit=
#   20000&incident_type_description=RESIDENTIAL%20BURGLARY"))
#
# # Write the dataset so I don't have to keep importing from Socrata
# dB <- dBRaw
# write.csv(dBRaw, file = "./data/bos.csv")
d <- read.csv("./data/bos.csv")
# Prepare to create x, y
d$Loc <- gsub("\\(", "", d$Location)
d$Loc <- gsub("\\)", "", d$Loc)
d <- d %>%
tbl_df()  %>% # Convert to tbl class - easier to examine than dfs
mutate(dateTime = mdy_hms(FROMDATE, tz='EST')) %>%
separate(Loc, c("x", "y"), ",")
clust <- d %>%
ungroup %>% dplyr::select(x, y)
clust <- d
clust <- d %>%
ungroup %>% dplyr::select(x, y)
mydata <- clust
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
